@model NBITTask.ViewModels.ProductReviewVM

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Product";
}

<h2>Details</h2>
<style>
    .star {
        margin: 0px 1px;
    }
</style>

<div>

    <ul class="rating d-flex" style="list-style: none;">
        <li class="star" value="1"><i class="fa fa-star"></i></li>
        <li class="star" value="2"><i class="fa fa-star"></i></li>
        <li class="star" value="3"><i class="fa fa-star"></i></li>
        <li class="star" value="4"><i class="fa fa-star"></i></li>
        <li class="star" value="5"><i class="fa fa-star"></i></li>
    </ul>

    @{
        var rating = ViewBag.averageRating;

        for (int i = 1; i <= 5; i++)
        {
            if (i <= rating)
            {
                <i class="fa fa-star"></i>
            }
            else
            {
                <i class="fa fa-star-o"></i>
            }
            //rating--;
        }
    }
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayFor(model => model.Product.Name)
        </dt>
        @Html.HiddenFor(model => model.Product.Id, new { @class = "productId" })
        <dd>
            @{
                var base64 = Convert.ToBase64String(Model.Product.Image);
                var imageSrc = String.Format("data:image/gif;base64,{0}", base64);
                <img src='@imageSrc' id="service-image" alt="" width="300" />
            }
        </dd>
        @ViewBag.quality

        @foreach (var item in Model.Product.Reviews)
        {
            <div>@item.CustomerReview</div>
            <div>@item.User.Email</div>
            <div>@item.ReviewDateTime</div>
        }

        @if (User.IsInRole("User"))
        {
            using (Html.BeginForm("Save", "Reviews", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                <div class="form-horizontal d-flex justify-content-center align-items-center">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="row">
                        <div class="col-xl-10 col-md-10 form-group mx-auto mb-xl-4 mb-lg-3">
                            <div class="">
                                @Html.TextAreaFor(model => model.Review.CustomerReview, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Review.CustomerReview, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        @Html.HiddenFor(model => model.Product.Id)

                        <div class="col-xl-10 col-md-10 form-group mx-auto mb-xl-4 mb-lg-3">
                            <div class="">
                                <input type="submit" value="Save" class="btn btn-success category-form-submit-btn w-100 mt-3" />
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
    </dl>
</div>
<p>
    @*@Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |*@
    @Html.ActionLink("Back to List", "Index")
</p>

<script src="~/Scripts/jquery-3.4.1.js"></script>
<script>
    //function saveRating() {
    //    debugger
    //    var value = $(this).data('value');
    //    console.log(value);
    //}

    //$(".rating li").click(function () {
    //    debugger
    //    var value = $(this).prevAll().length;
    //    alert($(this).prevAll().length + 1);
    //});

    $(".rating li").click(function () {
        debugger
        var value = $(this).prevAll().length + 1;
        var productId = $(".productId").val();

        $.ajax({
            type: "POST",
            url: "/Ratings/AddRating",
            data: { 'productRating': value, 'productId': productId },
            success: function (data) {
                console.log("success");
            }
        });
    })

</script>